1). Install the latest Raspbian on a blank SD (cfdisk it if necessary).  Use
    the 'Lite' image, without all the desktop stuff:

	$ dd bs=8M if=raspbian.img of=/dev/sdX

2). Set up the Pi for headless SSH access:

	$ mount /dev/sdX1 /mnt
	$ touch /mnt/ssh
	$ umount /dev/sdX1

	$ mount /dev/sdX2 /mnt
	$ vi /mnt/etc/wpa_supplicant/wpa_supplicant.conf

		ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
		update_config=1
		country=GB

		network={
			ssid="*** ENTER SSID HERE ***"
			scan_ssid=1
			psk="*** ENTER SUPER SECRET WIFI PASSWORD HERE ***"
			key_mgmt=WPA-PSK
		}

	:wq
	$ umount /dev/sdX2

3). Boot and SSH to the Pi to expand the filesystem to the entire SD capacity:

	$ sudo raspi-config

		Advanced Options -> Expand Filesystem

4). Reboot the Pi for the filesystem expansion to take effect, then SSH to it.

5). Install picoReflow dependencies:

	$ sudo apt-get install python-pip python-dev libevent-dev
	$ pip install ez-setup
	$ pip install greenlet bottle gevent gevent-websocket
	$ pip install RPi.GPIO

6). Optional - if using the Pi to compile the drivers, run:

	$ cd Drivers
	$ ./install-bcm2835.sh

	Make sure that libhotpi-max31850.so.* is copied to /usr/local/lib

7). Create a user (hotpi), group (hotpi) and home for the application:

	$ sudo addgroup hotpi
	$ sudo adduser hotpi --gid 1001
	$ sudo adduser hotpi gpio

8). Copy the picoReflow directory (and its contents) to /home/hotpi

9). Setup capabilities for the application (binding to port 80, near-realtime
    scheduling):

	$ ### THIS IS INSECURE - BRUTE FORCE IS TO LOCK PYTHON TO THE HOTPI GROUP ###

	$ sudo chmod o-x /usr/bin/python2.7
	$ sudo chown root:hotpi /usr/bin/python2.7
	$ sudo setcap cap_net_bind_service,cap_sys_nice,cap_ipc_lock+ep /usr/bin/python2.7

10). Run the following:

	$ sudo cp /home/hotpi/picoreflow/lib/init/reflow /etc/init.d
	$ sudo chmod +x /etc/init.d/reflow
	$ sudo chmod o+r /etc/init.d/reflow
	$ sudo update-rc.d reflow defaults

11). Reboot and test the application runs...
